/*
 * The MIT License
 *
 * Copyright: Copyright (C) 2014 T2Ti.COM
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 * The author may be contacted at: t2ti.com@gmail.com
 * 
 * @author Claudio de Barros (T2Ti.com)
 * @version 2.0
 */
package com.t2ti.pafecf.configurador.view;

import com.t2ti.pafecf.configurador.bd.AcessoBanco;
import com.t2ti.pafecf.configurador.infra.Biblioteca;
import com.t2ti.pafecf.infra.TableModelGenerico;
import com.t2ti.pafecf.controller.ControllerGenerico;
import com.t2ti.pafecf.vo.CfopVO;
import com.t2ti.pafecf.vo.EcfCaixaVO;
import com.t2ti.pafecf.vo.EcfConfiguracaoVO;
import com.t2ti.pafecf.vo.EcfEmpresaVO;
import com.t2ti.pafecf.vo.EcfImpressoraVO;
import com.t2ti.pafecf.vo.EcfPosicaoComponentesVO;
import com.t2ti.pafecf.vo.EcfResolucaoVO;
import jACBrFramework.ACBrException;
import jACBrFramework.serial.ecf.ACBrECF;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import javax.swing.AbstractAction;
import javax.swing.JColorChooser;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

public class Configuracao extends javax.swing.JFrame {

    private EcfConfiguracaoVO ecfCfg;
    private List<EcfEmpresaVO> listaEmpresa;
    private List<EcfCaixaVO> listaCaixa;
    private List<EcfImpressoraVO> listaImpressora;
    private List<CfopVO> listaCfop;
    private List<EcfResolucaoVO> listaResolucao;
    private TableModelGenerico<EcfResolucaoVO> tableModelResolucao;
    private TableModelGenerico<EcfPosicaoComponentesVO> tableModelPosicaoComponente;

    /**
     * Creates new form Configuracao
     */
    public Configuracao() {
        initComponents();
        setLocationRelativeTo(null);
        pack();

        gridCabecalho.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                atualizaGridDetalhe();
            }
        });

        CancelaAction cancelaAction = new CancelaAction();
        botaoCancela.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "cancelaAction");
        botaoCancela.getActionMap().put("cancelaAction", cancelaAction);

        ConfirmaAction confirmaAction = new ConfirmaAction();
        botaoGravaArquivoAuxiliar.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_F12, 0), "confirmaAction");
        botaoGravaArquivoAuxiliar.getActionMap().put("confirmaAction", confirmaAction);

        jTabbedPane1.remove(jPanel4);
    }

    private class ConfirmaAction extends AbstractAction {

        public ConfirmaAction() {
        }

        public void actionPerformed(ActionEvent e) {
            confirma();
        }
    }

    private class CancelaAction extends AbstractAction {

        public CancelaAction() {
        }

        public void actionPerformed(ActionEvent e) {
            System.exit(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelPrincipal = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        panelComponentes = new javax.swing.JPanel();
        panelBotoes = new javax.swing.JPanel();
        botaoGravaArquivoAuxiliar = new javax.swing.JButton();
        botaoConfirma = new javax.swing.JButton();
        botaoConfirma1 = new javax.swing.JButton();
        botaoCancela = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cbImpressora = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        cbCfopNf2 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        cbCaixa = new javax.swing.JComboBox();
        txtCaminhoImagemMarketing = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtBitsPorSegundo = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtPortaPinPad = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtPortaBalanca = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtIntervaloEcf = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtTimeOutEcf = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtMensagemCupom = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtDescricaoSangria = new javax.swing.JTextField();
        txtTituloTelaCaixa = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        txtCaminhoImagemLayout = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        txtCaminhoImagemProduto = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        cbEmpresa = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        cbCfopEcf = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        txtPortaEcf = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtIpServidor = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtIndiceDav = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtDescricaoSuprimento = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        chkMarketingAtivo = new javax.swing.JCheckBox();
        panelCorJanelaInterna = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        cbTipoTef = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        txtNrViasTef = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txtTipoGpTef = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtIpTefDedicado = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtEsperaStsTef = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        txtTempoEsperaTef = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        panelGridCabecalho = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gridCabecalho = new javax.swing.JTable();
        panelGridDetalhe = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        gridDetalhe = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtGrandeTotal = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNumeroSerie = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 700));
        getContentPane().setLayout(new java.awt.CardLayout());

        panelPrincipal.setLayout(new java.awt.GridBagLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/t2ti/pafecf/configurador/view/telaMonitor04.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        panelPrincipal.add(jLabel1, gridBagConstraints);

        panelComponentes.setLayout(new java.awt.GridBagLayout());

        panelBotoes.setBackground(new Color(255,255,255,0));
        panelBotoes.setLayout(new java.awt.GridBagLayout());

        botaoGravaArquivoAuxiliar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/t2ti/pafecf/configurador/view/botaoConfirmar.png"))); // NOI18N
        botaoGravaArquivoAuxiliar.setText("Gravar Arquivo Auxiliar");
        botaoGravaArquivoAuxiliar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoGravaArquivoAuxiliarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        panelBotoes.add(botaoGravaArquivoAuxiliar, gridBagConstraints);

        botaoConfirma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/t2ti/pafecf/configurador/view/botaoConfirmar.png"))); // NOI18N
        botaoConfirma.setText("Confirma (F12)");
        botaoConfirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoConfirmaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        panelBotoes.add(botaoConfirma, gridBagConstraints);

        botaoConfirma1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/t2ti/pafecf/configurador/view/botaoConfirmar.png"))); // NOI18N
        botaoConfirma1.setText("Config Conexão");
        botaoConfirma1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoConfirma1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        panelBotoes.add(botaoConfirma1, gridBagConstraints);

        botaoCancela.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/t2ti/pafecf/configurador/view/botaoCancelar.png"))); // NOI18N
        botaoCancela.setText("Fechar (ESC)");
        botaoCancela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        panelBotoes.add(botaoCancela, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        panelComponentes.add(panelBotoes, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel4.setText("Empresa:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(cbImpressora, gridBagConstraints);

        jLabel5.setText("Terminal de Caixa:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(cbCfopNf2, gridBagConstraints);

        jLabel6.setText("Caminho das Imagens de Marketing");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(cbCaixa, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(txtCaminhoImagemMarketing, gridBagConstraints);

        jLabel7.setText("Impressoa Fiscal:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel7, gridBagConstraints);

        jLabel8.setText("Bits por Segundo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel8, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(txtBitsPorSegundo, gridBagConstraints);

        jLabel9.setText("Porta Pin-Pad");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel9, gridBagConstraints);

        txtPortaPinPad.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(txtPortaPinPad, gridBagConstraints);

        jLabel10.setText("Porta Balança");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel10, gridBagConstraints);

        txtPortaBalanca.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(txtPortaBalanca, gridBagConstraints);

        jLabel11.setText("TimeOut ECF");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(txtIntervaloEcf, gridBagConstraints);

        jLabel12.setText("Intervalo ECF");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel12, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(txtTimeOutEcf, gridBagConstraints);

        jLabel13.setText("Mensagem do cupom:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel13, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(txtMensagemCupom, gridBagConstraints);

        jLabel14.setText("Descrição Sangria:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel14, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 19;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(txtDescricaoSangria, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(txtTituloTelaCaixa, gridBagConstraints);

        jLabel15.setText("Titulo da Tela do Caixa");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel15, gridBagConstraints);

        jButton2.setText("...");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.ipady = -5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(jButton2, gridBagConstraints);

        jLabel16.setText("Caminho das Imagens de Layout");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel16, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(txtCaminhoImagemLayout, gridBagConstraints);

        jButton3.setText("...");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 21;
        gridBagConstraints.ipady = -5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(jButton3, gridBagConstraints);

        jLabel17.setText("Caminho das Imagens dos Produtos:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel17, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(txtCaminhoImagemProduto, gridBagConstraints);

        jButton4.setText("...");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.ipady = -5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(jButton4, gridBagConstraints);

        jLabel18.setText("CFOP NF2:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel18, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(cbEmpresa, gridBagConstraints);

        jLabel19.setText("CFOP ECF:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel19, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(cbCfopEcf, gridBagConstraints);

        jLabel20.setText("Porta ECF:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel20, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(txtPortaEcf, gridBagConstraints);

        jLabel21.setText("IP do Servidor:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel21, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(txtIpServidor, gridBagConstraints);

        jLabel22.setText("Indice Gerencial DAV:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel22, gridBagConstraints);

        txtIndiceDav.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 19;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(txtIndiceDav, gridBagConstraints);

        jLabel23.setText("Cor Janelas Internas:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel23, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 19;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(txtDescricaoSuprimento, gridBagConstraints);

        jLabel31.setText("Descrição Suprimento:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabel31, gridBagConstraints);

        jButton5.setText("...");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.ipady = -5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(jButton5, gridBagConstraints);

        chkMarketingAtivo.setText("Marketing Ativo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(chkMarketingAtivo, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 21;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(panelCorJanelaInterna, gridBagConstraints);

        jTabbedPane1.addTab("Principais", jPanel3);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel24.setText("Tipo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel4.add(jLabel24, gridBagConstraints);

        cbTipoTef.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DISCADO", "DEDICADO" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel4.add(cbTipoTef, gridBagConstraints);

        jLabel25.setText("Nr de Vias:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel4.add(jLabel25, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel4.add(txtNrViasTef, gridBagConstraints);

        jLabel26.setText("Tipo GP:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel4.add(jLabel26, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel4.add(txtTipoGpTef, gridBagConstraints);

        jLabel27.setText("IP TEF Dedicado:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel4.add(jLabel27, gridBagConstraints);

        txtIpTefDedicado.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel4.add(txtIpTefDedicado, gridBagConstraints);

        jLabel28.setText("Espera STS:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel4.add(jLabel28, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel4.add(txtEsperaStsTef, gridBagConstraints);

        jLabel29.setText("Tempo Espera:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel4.add(jLabel29, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel4.add(txtTempoEsperaTef, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jSeparator1, gridBagConstraints);

        jTabbedPane1.addTab("Configurações TEF", jPanel4);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        panelGridCabecalho.setBackground(new Color(255,255,255,0));
        panelGridCabecalho.setBorder(javax.swing.BorderFactory.createTitledBorder("Configurações"));
        panelGridCabecalho.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setAutoscrolls(true);
        jScrollPane1.setMinimumSize(new java.awt.Dimension(452, 80));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(452, 80));

        gridCabecalho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(gridCabecalho);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelGridCabecalho.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 5, 10);
        jPanel1.add(panelGridCabecalho, gridBagConstraints);

        panelGridDetalhe.setBackground(new Color(255,255,255,0));
        panelGridDetalhe.setBorder(javax.swing.BorderFactory.createTitledBorder("Posição dos componentes"));
        panelGridDetalhe.setLayout(new java.awt.GridBagLayout());

        jScrollPane2.setBorder(null);
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane2.setMinimumSize(new java.awt.Dimension(452, 150));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(452, 150));

        gridDetalhe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(gridDetalhe);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelGridDetalhe.add(jScrollPane2, gridBagConstraints);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgBotoes/preferences_24.png"))); // NOI18N
        jButton1.setText("Posicionar os componentes de forma visual");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        panelGridDetalhe.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 5, 10);
        jPanel1.add(panelGridDetalhe, gridBagConstraints);

        jTabbedPane1.addTab("Posição Componentes", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtGrandeTotal.setEnabled(false);
        jPanel2.add(txtGrandeTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 540, -1));

        jLabel2.setText("Grande Total:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        jLabel3.setText("Número de Série:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        txtNumeroSerie.setEnabled(false);
        jPanel2.add(txtNumeroSerie, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 540, -1));

        jButton6.setText("Carregar Dados ECF");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        jTabbedPane1.addTab("Arquivo Auxiliar", jPanel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        panelComponentes.add(jTabbedPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelPrincipal.add(panelComponentes, gridBagConstraints);

        getContentPane().add(panelPrincipal, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoGravaArquivoAuxiliarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoGravaArquivoAuxiliarActionPerformed
        gravaArquivoAuxiliar();
    }//GEN-LAST:event_botaoGravaArquivoAuxiliarActionPerformed

    private void botaoConfirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoConfirmaActionPerformed
        confirma();
    }//GEN-LAST:event_botaoConfirmaActionPerformed

    private void botaoCancelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelaActionPerformed
        System.exit(0);
    }//GEN-LAST:event_botaoCancelaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (gridCabecalho.getSelectedRow() != -1) {
            Caixa caixa = new Caixa(null, false, tableModelResolucao.getRow(gridCabecalho.getSelectedRow()));
            caixa.setLocationRelativeTo(null);
            caixa.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma resolução.", "Informação do Sistema", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void botaoConfirma1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoConfirma1ActionPerformed
        configuraConexao();
    }//GEN-LAST:event_botaoConfirma1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        txtCaminhoImagemProduto.setText(selecionaDiretorio());
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        txtCaminhoImagemMarketing.setText(selecionaDiretorio());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        txtCaminhoImagemLayout.setText(selecionaDiretorio());
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        panelCorJanelaInterna.setBackground(selecionaCor());
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            carregaDadosEcf();
        } catch (ACBrException | RuntimeException ex) {
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao carregar os dados do ECF.\n" + ex.getMessage(), "Erro do Sistema", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Configuracao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Configuracao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Configuracao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Configuracao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Configuracao cfg = new Configuracao();
                cfg.setVisible(true);
                cfg.configuraAmbiente();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoCancela;
    private javax.swing.JButton botaoConfirma;
    private javax.swing.JButton botaoConfirma1;
    private javax.swing.JButton botaoGravaArquivoAuxiliar;
    private javax.swing.JComboBox cbCaixa;
    private javax.swing.JComboBox cbCfopEcf;
    private javax.swing.JComboBox cbCfopNf2;
    private javax.swing.JComboBox cbEmpresa;
    private javax.swing.JComboBox cbImpressora;
    private javax.swing.JComboBox cbTipoTef;
    private javax.swing.JCheckBox chkMarketingAtivo;
    private javax.swing.JTable gridCabecalho;
    private javax.swing.JTable gridDetalhe;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel panelBotoes;
    private javax.swing.JPanel panelComponentes;
    private javax.swing.JPanel panelCorJanelaInterna;
    private javax.swing.JPanel panelGridCabecalho;
    private javax.swing.JPanel panelGridDetalhe;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JTextField txtBitsPorSegundo;
    private javax.swing.JTextField txtCaminhoImagemLayout;
    private javax.swing.JTextField txtCaminhoImagemMarketing;
    private javax.swing.JTextField txtCaminhoImagemProduto;
    private javax.swing.JTextField txtDescricaoSangria;
    private javax.swing.JTextField txtDescricaoSuprimento;
    private javax.swing.JTextField txtEsperaStsTef;
    private javax.swing.JTextField txtGrandeTotal;
    private javax.swing.JTextField txtIndiceDav;
    private javax.swing.JTextField txtIntervaloEcf;
    private javax.swing.JTextField txtIpServidor;
    private javax.swing.JTextField txtIpTefDedicado;
    private javax.swing.JTextField txtMensagemCupom;
    private javax.swing.JTextField txtNrViasTef;
    private javax.swing.JTextField txtNumeroSerie;
    private javax.swing.JTextField txtPortaBalanca;
    private javax.swing.JTextField txtPortaEcf;
    private javax.swing.JTextField txtPortaPinPad;
    private javax.swing.JTextField txtTempoEsperaTef;
    private javax.swing.JTextField txtTimeOutEcf;
    private javax.swing.JTextField txtTipoGpTef;
    private javax.swing.JTextField txtTituloTelaCaixa;
    // End of variables declaration//GEN-END:variables

    private void configuraAmbiente() {
        if (!verificaConexaoBanco()) {
            configuraConexao();
            return;
        }
        carregaConfiguracoes();
        carregaResolucoes();
    }

    private boolean verificaConexaoBanco() {
        try {
            AcessoBanco bd = new AcessoBanco();
            bd.conexaoLocal();
            return true;
        } catch (IOException ex) {
            //arquivo de configuracao nao existe
        } catch (RuntimeException ex) {
            JOptionPane.showMessageDialog(this, "Não foi possível realizar a conexão com o banco de dados.\n" + ex.getMessage() + "\n" + ex.getCause().getMessage(), "Erro do Sistema", JOptionPane.ERROR_MESSAGE);
        }
        return false;
    }

    private void configuraConexao() {
        ConfiguraConexao cfg = new ConfiguraConexao(this, true);
        cfg.setVisible(true);
        configuraAmbiente();
    }

    private String selecionaDiretorio() {
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.showOpenDialog(this);
        return chooser.getSelectedFile().toString() + "\\";
    }

    private Color selecionaCor() {
        Color color = JColorChooser.showDialog(this, "Selecione a cor", panelCorJanelaInterna.getBackground());
        if (color != null) {
            return color;
        }
        return panelCorJanelaInterna.getBackground();
    }

    private void confirma() {
        String[] opcoes = {"Sim", "Não"};
        int escolha = JOptionPane.showOptionDialog(null, "Salvar as configurações no Banco?", "Salva Configurações",
                JOptionPane.YES_OPTION, JOptionPane.QUESTION_MESSAGE,
                null, opcoes, null);
        if (escolha == JOptionPane.YES_OPTION) {
            try {
                salvaConfiguracoes();
                salvaPosicaoComponentes();

                JOptionPane.showMessageDialog(this, "Dados salvos com sucesso.", "Informação do Sistema", JOptionPane.INFORMATION_MESSAGE);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Erro ao converter String para Integer.", "Erro do Sistema", JOptionPane.ERROR_MESSAGE);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Ocorreu um erro ao salvar os dados no banco.\n" + ex.getMessage(), "Erro do Sistema", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void carregaConfiguracoes() {
        try {
            ControllerGenerico<EcfConfiguracaoVO> controller = new ControllerGenerico<>();
            ecfCfg = controller.getBean(1, EcfConfiguracaoVO.class);

            if (ecfCfg != null) {
                txtMensagemCupom.setText(ecfCfg.getMensagemCupom());
                txtPortaEcf.setText(ecfCfg.getPortaEcf());
                txtBitsPorSegundo.setText(String.valueOf(ecfCfg.getBitsPorSegundo()));
                txtTimeOutEcf.setText(String.valueOf(ecfCfg.getTimeoutEcf()));
                txtIntervaloEcf.setText(String.valueOf(ecfCfg.getIntervaloEcf()));
                txtTituloTelaCaixa.setText(ecfCfg.getTituloTelaCaixa());
                txtCaminhoImagemProduto.setText(ecfCfg.getCaminhoImagensProdutos());
                txtCaminhoImagemMarketing.setText(ecfCfg.getCaminhoImagensMarketing());
                txtCaminhoImagemLayout.setText(ecfCfg.getCaminhoImagensLayout());
                txtIpServidor.setText(ecfCfg.getIpServidor());
                txtDescricaoSuprimento.setText(ecfCfg.getDescricaoSuprimento());
                txtDescricaoSangria.setText(ecfCfg.getDescricaoSangria());
                if (ecfCfg.getMarketingAtivo().equals("S")) {
                    chkMarketingAtivo.setSelected(true);
                } else {
                    chkMarketingAtivo.setSelected(false);
                }
                txtTempoEsperaTef.setText(String.valueOf(ecfCfg.getTefTempoEspera()));
                txtNrViasTef.setText(String.valueOf(ecfCfg.getTefNumeroVias()));
                txtTipoGpTef.setText(String.valueOf(ecfCfg.getTefTipoGp()));
                txtEsperaStsTef.setText(String.valueOf(ecfCfg.getTefEsperaSts()));

                //
                ControllerGenerico<EcfEmpresaVO> controllerEmpresa = new ControllerGenerico<>();
                listaEmpresa = controllerEmpresa.getBeans(EcfEmpresaVO.class);
                for (EcfEmpresaVO e : listaEmpresa) {
                    cbEmpresa.addItem(e.getId() + " | " + e.getRazaoSocial());
                }

                ControllerGenerico<EcfCaixaVO> controllerCaixa = new ControllerGenerico<>();
                listaCaixa = controllerCaixa.getBeans(EcfCaixaVO.class);
                cbCaixa.removeAllItems();
                for (EcfCaixaVO c : listaCaixa) {
                    cbCaixa.addItem(c.getId() + " | " + c.getNome());
                    if (ecfCfg.getEcfCaixa() != null) {
                        if (ecfCfg.getEcfCaixa().getId() == c.getId()) {
                            cbCaixa.setSelectedIndex(cbCaixa.getItemCount() - 1);
                        }
                    }
                }

                ControllerGenerico<EcfImpressoraVO> controllerImpressora = new ControllerGenerico<>();
                listaImpressora = controllerImpressora.getBeans(EcfImpressoraVO.class);
                cbImpressora.removeAllItems();
                for (EcfImpressoraVO i : listaImpressora) {
                    cbImpressora.addItem(i.getId() + " | " + i.getIdentificacao());
                    if (ecfCfg.getEcfImpressora() != null) {
                        if (ecfCfg.getEcfImpressora().getId() == i.getId()) {
                            cbImpressora.setSelectedIndex(cbImpressora.getItemCount() - 1);
                        }
                    }
                }

                ControllerGenerico<CfopVO> controllerCfop = new ControllerGenerico<>();
                listaCfop = controllerCfop.getBeans(CfopVO.class);
                cbCfopEcf.removeAllItems();
                cbCfopNf2.removeAllItems();
                for (CfopVO c : listaCfop) {
                    cbCfopEcf.addItem(c.getCfop());
                    cbCfopNf2.addItem(c.getCfop());

                    if (ecfCfg.getCfopEcf() != null) {
                        if (ecfCfg.getCfopEcf().intValue() == c.getCfop().intValue()) {
                            cbCfopEcf.setSelectedIndex(cbCfopEcf.getItemCount() - 1);
                        }
                    }
                    if (ecfCfg.getCfopNf2() != null) {
                        if (ecfCfg.getCfopNf2().intValue() == c.getCfop().intValue()) {
                            cbCfopNf2.setSelectedIndex(cbCfopNf2.getItemCount() - 1);
                        }
                    }
                }

                //
                try {
                    panelCorJanelaInterna.setBackground(new Color(Integer.valueOf(ecfCfg.getCorJanelasInternas())));
                } catch (NumberFormatException e) {
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao carregar os dados da configuração.\n" + ex.getMessage(), "Erro do Sistema", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void salvaConfiguracoes() throws NumberFormatException, Exception {
        if (ecfCfg == null) {
            ecfCfg = new EcfConfiguracaoVO();
        }

        ecfCfg.setMensagemCupom(txtMensagemCupom.getText());
        ecfCfg.setPortaEcf(txtPortaEcf.getText());
        ecfCfg.setBitsPorSegundo(Integer.valueOf(txtBitsPorSegundo.getText()));
        ecfCfg.setTimeoutEcf(Integer.valueOf(txtTimeOutEcf.getText()));
        ecfCfg.setIntervaloEcf(Integer.valueOf(txtIntervaloEcf.getText()));
        ecfCfg.setTituloTelaCaixa(txtTituloTelaCaixa.getText());
        ecfCfg.setCaminhoImagensProdutos(txtCaminhoImagemProduto.getText());
        ecfCfg.setCaminhoImagensMarketing(txtCaminhoImagemMarketing.getText());
        ecfCfg.setCaminhoImagensLayout(txtCaminhoImagemLayout.getText());
        ecfCfg.setIpServidor(txtIpServidor.getText());
        ecfCfg.setDescricaoSuprimento(txtDescricaoSuprimento.getText());
        ecfCfg.setDescricaoSangria(txtDescricaoSangria.getText());
        if (chkMarketingAtivo.isSelected()) {
            ecfCfg.setMarketingAtivo("S");
        } else {
            ecfCfg.setMarketingAtivo("N");
        }
        ecfCfg.setTefTempoEspera(Integer.valueOf(txtTempoEsperaTef.getText()));
        ecfCfg.setTefNumeroVias(Integer.valueOf(txtNrViasTef.getText()));
        ecfCfg.setTefTipoGp(Integer.valueOf(txtTipoGpTef.getText()));
        ecfCfg.setTefEsperaSts(Integer.valueOf(txtEsperaStsTef.getText()));

        ecfCfg.setEcfEmpresa(listaEmpresa.get(cbEmpresa.getSelectedIndex()));
        ecfCfg.setEcfCaixa(listaCaixa.get(cbCaixa.getSelectedIndex()));
        ecfCfg.setEcfImpressora(listaImpressora.get(cbImpressora.getSelectedIndex()));
        ecfCfg.setCfopEcf(Integer.valueOf(cbCfopEcf.getSelectedItem().toString()));
        ecfCfg.setCfopNf2(Integer.valueOf(cbCfopNf2.getSelectedItem().toString()));
        ecfCfg.setCorJanelasInternas(String.valueOf(panelCorJanelaInterna.getBackground().getRGB()));

        ControllerGenerico<EcfConfiguracaoVO> controller = new ControllerGenerico<>();
        if (ecfCfg.getId() == null) {
            controller.salvar(ecfCfg);
        } else {
            controller.atualizar(ecfCfg);
        }

    }

    private void carregaResolucoes() {
        try {
            ControllerGenerico<EcfResolucaoVO> controller = new ControllerGenerico<>();
            listaResolucao = controller.getBeans(EcfResolucaoVO.class);

            tableModelResolucao = new TableModelGenerico<>(new EcfResolucaoVO());
            gridCabecalho.setModel(tableModelResolucao);
            tableModelResolucao.setValues(listaResolucao);

            tableModelPosicaoComponente = new TableModelGenerico<>(new EcfPosicaoComponentesVO());
            gridDetalhe.setModel(tableModelPosicaoComponente);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao carregar os dados da resolução.\n" + ex.getMessage(), "Erro do Sistema", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void atualizaGridDetalhe() {
        if (gridCabecalho.getSelectedRow() != -1) {
            EcfResolucaoVO resolucao = tableModelResolucao.getRow(gridCabecalho.getSelectedRow());
            tableModelPosicaoComponente.setValues(resolucao.getListaEcfPosicaoComponente());
        } else {
            tableModelPosicaoComponente.setValues(new ArrayList<EcfPosicaoComponentesVO>());
        }
    }

    private void salvaPosicaoComponentes() throws Exception {
        ControllerGenerico<EcfResolucaoVO> controller = new ControllerGenerico<>();
        for (EcfResolucaoVO e : tableModelResolucao.getValues()) {
            controller.atualizar(e);
        }
    }

    private void carregaDadosEcf() throws ACBrException {
        if (ecfCfg != null) {
            ACBrECF ecf = new ACBrECF();
            ecf.setModelo(Integer.valueOf(ecfCfg.getEcfImpressora().getModeloAcbr()));
            ecf.getDevice().setPorta(ecfCfg.getPortaEcf());
            ecf.getDevice().setTimeOut(ecfCfg.getTimeoutEcf());
            ecf.setIntervaloAposComando(ecfCfg.getIntervaloEcf());
            ecf.setRetentar(false);
            ecf.ativar();
            ecf.carregaAliquotas();
            ecf.carregaFormasPagamento();

            txtGrandeTotal.setText(String.valueOf(ecf.getGrandeTotal()));
            txtNumeroSerie.setText(ecf.getNumSerie());
        }
    }

    private void gravaArquivoAuxiliar() {

        if (!txtGrandeTotal.getText().isEmpty()) {
            try {
                File file = new File(Biblioteca.ARQUIVO_AUXILIAR);
                if (!file.exists()) {
                    file.createNewFile();
                }
                
                Properties arquivoAuxiliar = new Properties();
                arquivoAuxiliar.load(new FileInputStream(file));

                String gtEcf = Biblioteca.md5String(txtGrandeTotal.getText());
                arquivoAuxiliar.setProperty("ecf.gt", gtEcf);
                String serieEcf = Biblioteca.md5String(txtNumeroSerie.getText());
                arquivoAuxiliar.setProperty("ecf.serie", serieEcf);

                FileOutputStream out = new FileOutputStream(file);
                arquivoAuxiliar.store(out, "Arquivo auxiliar do PAF");
                out.close();

                JOptionPane.showMessageDialog(this, "Arquivo gravado com sucesso.", "Informação do Sistema", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException | NoSuchAlgorithmException ex) {
                JOptionPane.showMessageDialog(this, "Ocorreu um erro ao gravar o arquivo auxiliar.\n" + ex.getMessage(), "Erro do Sistema", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Dados do ECF não carregados.", "Informação do Sistema", JOptionPane.WARNING_MESSAGE);
        }
    }

}
